import $ from "jquery";

import "bootstrap";

import feather = require("feather-icons");

import Translator from '@andreasremdt/simple-translator';

import * as util from "./ts/util";

{{{module_imports}}}

{{{translation_imports}}}

interface Module {
    init(): void;
    addEventListeners(source: EventTarget): void;
    updateLockState(m: Modules): void;
}

let modules: Module[] = [{{{modules}}}];

$('.navbar-collapse a').on("click", function () {
    $(".navbar-collapse").collapse('hide');
});

interface Modules {
    {{{module_interface}}}
}

function update_modules(module_init: Modules) {
    for (let m of modules) {
        m.updateLockState(module_init);
    }
}

export function registerEvents(eventSource: EventTarget) {
    eventSource.addEventListener('modules', function (e: util.SSE) {
        update_modules(<Modules>(JSON.parse(e.data)));
    }, false);

    for (let m of modules) {
        m.addEventListeners(eventSource);
    }
}

let last_shown_tab = null;

// This is the part of the initialization to be done
// if we are authenticated (or authentication is deactivated)
function init() {
    for (let m of modules) {
        m.init();
    }

    util.setupEventSource(true, false,  (ws: WebSocket, eventTarget: EventTarget) => registerEvents(eventTarget));
}

$(window).on('pageshow', (ev) => {
    window.setTimeout(() => $('#nav-list').removeAttr("style"), 200);
    window.setTimeout(() => $('#main').removeAttr("style"), 200);

    util.ifLoggedInElseReload(init);

    feather.replace();

    $.ajaxSetup({
        timeout: 5000
    });

    var translator = new Translator();

{{{translation_adds}}}

    translator.config.defaultLanguage = 'en';
    for (let l of navigator.languages) {
        let lang = l.substr(0, 2);
        if (translator.languages.has(lang)) {
            translator.config.defaultLanguage = lang;
            break;
        }
        console.log("Sorry, got no translation for " + l);
    }

    translator.translatePageTo();

    $('a[data-toggle="tab"]').on('show.bs.tab', () => {
        $('a[data-toggle="tab"]').not(<Element>event.target).removeClass("active");
        $('a[data-toggle="tab"]').not(<Element>event.target).trigger("hidden.bs.tab");
    });

    $("#reboot_button").on("click", () => {
        $('#reboot').modal('hide');
        util.reboot();
    });
});
